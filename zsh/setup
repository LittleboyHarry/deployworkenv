#!/bin/bash

# Constant:
ZPLG_LIST=${ZPLG_LIST:-$HOME/.zshrc.pluglist}
ZPLG_LOADER=${ZPLG_LOADER:-$HOME/.zshrc.plugloader}
ZSH="${ZSH:-$HOME/.oh-my-zsh}"
ZSH_CUSTOM="$ZSH/custom"

# Environment:
DIR=$(dirname "$0")
DISTRO=$(lsb_release -si)
USING_PACMAN=$(
    [ ! -x "$(command -v pacman)" ]
    echo $?
)

# Ask:
function ask_installer() {
    [ -v USE_PKGINST ] && return

    if [[ -x "$(command -v pkcon)" && -d /run/systemd/system ]]; then
        USE_PKGINST='pkcon install -y '
    elif [ $USING_PACMAN = 1 ]; then
        USE_PKGINST='sudo pacman -S --noconfirm '
    elif [ -x "$(command -v dpkg)" ]; then
        USE_PKGINST='sudo apt-get install -y '
    elif [ -x "$(command -v dnf)" ]; then
        USE_PKGINST='sudo dnf install -y '
    fi

    if [ -v USE_PKGINST ]; then
        echo "INFO: package installer = $USE_PKGINST"
    else
        echo 'PackageKit not available! Maybe:'
        echo '- `sudo pacman -S --noconfirm `'
        echo '- `sudo apt-get install -y `'
        echo '- `sudo dnf install -y `'
        echo '- ...'
        read -p 'Input your package manager install command: ' USE_PKGINST
    fi
}

function ask_recommend_theme() {
    [ -v USE_RECOMMEND_THEME ] && return
    grep -q '^ZSH_THEME="steeef"$' ~/.zshrc && return
    if [[ "$(grep '^ZSH_THEME=' ~/.zshrc | cut -d'"' -f2)" != "steeef" ]]; then
        read -p 'Use ohmyzsh steeef theme (Y/n)? ' r
        [[ "$r" =~ ^(Y|y|)$ ]] && USE_RECOMMEND_THEME=1
    fi
}

function ask_syntax_highlight() {
    [ -v USE_SYNTAX_HIGHLIGHT ] && return
    grep -q '^source .*zsh-syntax-highlighting.zsh' ~/.zshrc && return
    read -p 'Install zsh-syntax-highlighting (Y/n)? ' r
    [[ "$r" =~ ^(Y|y|)$ ]] && USE_SYNTAX_HIGHLIGHT=1
}

function ask_auto_suggest() {
    [ -v USE_AUTO_SUGGEST ] && return
    grep -q '^source .*zsh-autosuggestions.zsh' ~/.zshrc && return
    read -p 'Install zsh-autosuggestions (Y/n)? ' r
    [[ "$r" =~ ^(Y|y|)$ ]] && USE_AUTO_SUGGEST=1
}

function ask_pacman_pkgfile() {
    [ -v USE_PACMAN_PKGFILE ] && return
    [[ ! -z "$(pacman -Qs zsh)" ]] && grep -q '^source /usr/share/doc/pkgfile/command-not-found.zsh$' ~/.zshrc && return
    read -p 'Install `pkgfile` to provide command-not-found advice (Y/n)? ' r
    [[ "$r" =~ ^(Y|y|)$ ]] && USE_PACMAN_PKGFILE=1
}

function ask_common_alias() {
    [ -v USE_COMMON_ALIAS ] && return
    echo "DOC: https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/common-aliases"
    read -p 'NOTICE: Use ohmyzsh common-aliases (y/N)? ' r
    [[ "$r" =~ ^(Y|y|)$ ]] && USE_COMMON_ALIAS=1
}

ask_installer
ask_recommend_theme
ask_syntax_highlight
ask_auto_suggest
ask_common_alias
[ $USING_PACMAN = 1 ] && ask_pacman_pkgfile

[ ! -x "$(command -v zsh)" ] && $USE_PKGINST zsh
test -d "$ZSH" || NOLOG=1 RUNZSH=no "$DIR/instomz"
echo >>~/.zshrc

cat "$DIR/_recommend.zsh" >>~/.zshrc

# No Update:
sed -i "/disable automatic updates/ s/^#[ ]*//" ~/.zshrc
echo 'Manually update: omz update'

if [ -v USE_RECOMMEND_THEME ]; then
    cp $ZSH/themes/steeef.zsh-theme $ZSH_CUSTOM/themes
    sed -e '/^PROMPT=\$/i local exit_code="%(?,,C:%{$fg[red]%}%?%{$reset_color%})"' \
        -e "/^PROMPT=\\$'$/{n;s/$/ [%*] \$exit_code/;s/%m/&(\$(lsb_release -si))/}" \
        -i $ZSH_CUSTOM/themes/steeef.zsh-theme
    sed -i 's/^ZSH_THEME=".*"/ZSH_THEME="steeef"/' ~/.zshrc
fi

# Plugins:
TMPL_ZPLG_LIST="$DIR/_omzpluglist"
TMPL_ZPLG_LOADER="$DIR/_omzplugloader.zsh"

[[ -f "$ZPLG_LIST" ]] || cat "$TMPL_ZPLG_LIST" >"$ZPLG_LIST"
[ -x "$(command -v systemctl)" ] && echo systemd >>"$ZPLG_LIST"
if [ -x "$(command -v dpkg)" ]; then
    if [ "$DISTRO" = Ubuntu ]; then
        echo ubuntu >>"$ZPLG_LIST"
    else
        echo debian >>"$ZPLG_LIST"
    fi
    echo 'unalias acs &>/dev/null' >>~/.zshrc
    echo "alias acse='apt-cache search'" >>~/.zshrc
fi
[ -x "$(command -v dnf)" ] && echo dnf >>"$ZPLG_LIST"
[ "$USING_PACMAN" = 1 ] && echo archlinux >>"$ZPLG_LIST"

cat "$TMPL_ZPLG_LOADER" >"$ZPLG_LOADER"
sed -i "s#plugins=(git)\$#source \"$ZPLG_LOADER\"#" ~/.zshrc
echo "INFO: Plugins loader at: $ZPLG_LOADER"
echo "INFO: Plugins list at: $ZPLG_LIST"
echo

if [ "$USE_SYNTAX_HIGHLIGHT" = 1 ]; then
    $USE_PKGINST zsh-syntax-highlighting
    if [ $USING_PACMAN = 1 ]; then
        echo 'source /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh' >>~/.zshrc
    else
        echo 'source /usr/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh' >>~/.zshrc
    fi
fi

if [ "$USE_AUTO_SUGGEST" = 1 ]; then
    $USE_PKGINST zsh-autosuggestions
    if [ $USING_PACMAN = 1 ]; then
        echo 'source /usr/share/zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh' >>~/.zshrc
    else
        echo 'source /usr/share/zsh-autosuggestions/zsh-autosuggestions.zsh' >>~/.zshrc
    fi
fi

if [ "$USE_PACMAN_PKGFILE" = 1 ]; then
    $USE_PKGINST pkgfile
    echo 'source /usr/share/doc/pkgfile/command-not-found.zsh' | tee -a ~/.zshrc >/dev/null
    echo "==> Run 'sudo pkgfile -u'"
    sudo pkgfile -u
fi

[ "$USE_COMMON_ALIAS" = 1 ] && echo common-aliases >>"$ZPLG_LIST"

echo >>~/.zshrc

[[ "$NOLOG" = 1 ]] || echo "$0" >>~/deployworkenv.log
