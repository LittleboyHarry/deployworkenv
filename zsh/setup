#!/bin/bash
ZPLG_LIST=${ZPLG_LIST:-$HOME/.zshrc.pluglist}
ZPLG_LOADER=${ZPLG_LOADER:-$HOME/.zshrc.plugloader}
PKG_INST_CMD=${PKG_INST_CMD:-pkcon install -y }
ZSH="${ZSH:-$HOME/.oh-my-zsh}"

DIR=$(dirname "$0")
USE_PACMAN=$(
    [ ! -x "$(command -v pacman)" ]
    echo $?
)

[ ! -x "$(command -v zsh)" ] && $PKG_INST_CMD zsh
test -d "$ZSH" || NOLOG=1 RUNZSH=no "$DIR/instomz"
echo >>~/.zshrc

cat "$DIR/_recommend.zsh" >>~/.zshrc

# No Update:
sed -i "/disable automatic updates/ s/^#[ ]*//" ~/.zshrc
echo 'Manually update: omz update'

# Plugins:
ZSH_CUSTOM="$ZSH/custom"
TMPL_ZPLG_LIST="$DIR/_omzpluglist"
TMPL_ZPLG_LOADER="$DIR/_omzplugloader.zsh"

[[ -f "$ZPLG_LIST" ]] || cat "$TMPL_ZPLG_LIST" >"$ZPLG_LIST"
[ -x "$(command -v systemctl)" ] && echo systemd >>"$ZPLG_LIST"
[ -x "$(command -v dpkg)" ] && echo debian >>"$ZPLG_LIST"
[ -x "$(command -v dnf)" ] && echo dnf >>"$ZPLG_LIST"
[ $USE_PACMAN = 1 ] && echo archlinux >>"$ZPLG_LIST"
cat "$TMPL_ZPLG_LOADER" >"$ZPLG_LOADER"
sed -i "s#plugins=(git)\$#source \"$ZPLG_LOADER\"#" ~/.zshrc
echo "INFO: Plugins loader at: $ZPLG_LOADER"
echo "INFO: Plugins list at: $ZPLG_LIST"
echo

# Special:
if [[ ! -d /run/systemd/system && "$PKG_INST_CMD" == pkcon* ]]; then
    echo 'PackageKit not available! Maybe:'
    echo '- `yes | sudo pacman -S `'
    echo '- `sudo apt-get install -y `'
    echo '- ...'
    read -p 'Input your package manager install command: ' PKG_INST_CMD
else
    echo "INFO: package installer = $PKG_INST_CMD"
fi
echo

read -p 'Install zsh-syntax-highlighting (Y/n)? ' r
if [[ "$r" =~ ^(Y|y|)$ ]]; then
    $PKG_INST_CMD zsh-syntax-highlighting
    if [ $USE_PACMAN = 1 ]; then
        echo 'source /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh' >>~/.zshrc
    else
        echo 'source /usr/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh' >>~/.zshrc
    fi
fi

read -p 'Install zsh-autosuggestions (Y/n)? ' r
if [[ "$r" =~ ^(Y|y|)$ ]]; then
    $PKG_INST_CMD zsh-autosuggestions
    if [ $USE_PACMAN = 1 ]; then
        echo 'source /usr/share/zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh' >>~/.zshrc
    else
        echo '/usr/share/zsh-autosuggestions/zsh-autosuggestions.zsh' >>~/.zshrc
    fi
fi

# Theme Recommend:
if [[ "$(grep '^ZSH_THEME=' ~/.zshrc | cut -d'"' -f2)" != "steeef" ]]; then
    read -p 'Use ohmyzsh steeef theme (Y/n)? ' r
    if [[ "$r" =~ ^(Y|y|)$ ]]; then
        cp $ZSH/themes/steeef.zsh-theme $ZSH_CUSTOM/themes
        sed -i -e '/^PROMPT=\$/i local exit_code="%(?,,C:%{$fg[red]%}%?%{$reset_color%})"' -e "/^PROMPT=\\$'$/{n;s/$/ [%*] \$exit_code/;}" $ZSH_CUSTOM/themes/steeef.zsh-theme
        sed -i 's/^ZSH_THEME=".*"/ZSH_THEME="steeef"/' ~/.zshrc
    fi
fi

# Optional:
if [ $USE_PACMAN = 1 ]; then
    echo
    read -p 'Install `pkgfile` to provide command-not-found advice (Y/n)? ' r
    if [[ "$r" =~ ^(Y|y|)$ ]]; then
        $PKG_INST_CMD pkgfile
        echo 'source /usr/share/doc/pkgfile/command-not-found.zsh' | tee -a ~/.zshrc >/dev/null
        echo "==> sudo pkgfile -u"
        sudo pkgfile -u
    fi
fi

echo
echo "document: https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/common-aliases"
read -p 'WARN: Use ohmyzsh common-aliases (y/N)? ' r
[[ "$r" =~ ^(Y|y)$ ]] && echo common-aliases >>"$ZPLG_LIST"

echo >>~/.zshrc

[[ -v NOLOG ]] || echo "$0" >>~/deployworkenv.log
